{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/luiscf1226/Documents/Easy%20Solutions/alquipos/repos/fe-client/Frontend-Client/alquipos-cliente/src/services/supabase.ts"],"sourcesContent":["import { createClient, SupabaseClient, AuthError } from '@supabase/supabase-js';\n\n// Get Supabase URL and Key from environment variables\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL;\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;\n\n// Validate environment variables\nif (!supabaseUrl || !supabaseAnonKey) {\n  console.error(`\n    Missing Supabase environment variables.\n    Please add the following to your .env file:\n    \n    NEXT_PUBLIC_SUPABASE_URL=your-project-url\n    NEXT_PUBLIC_SUPABASE_ANON_KEY=your-anon-key\n    \n    You can find these values in your Supabase project settings.\n  `);\n}\n\n// Create a mock client for initialization\nconst mockClient = {\n  rpc: () => Promise.reject(new Error('Supabase client not initialized')),\n  from: () => ({\n    select: () => Promise.reject(new Error('Supabase client not initialized')),\n    insert: () => Promise.reject(new Error('Supabase client not initialized')),\n    update: () => Promise.reject(new Error('Supabase client not initialized')),\n    delete: () => Promise.reject(new Error('Supabase client not initialized')),\n    eq: () => Promise.reject(new Error('Supabase client not initialized')),\n    single: () => Promise.reject(new Error('Supabase client not initialized')),\n  }),\n  auth: {\n    signUp: () => Promise.reject(new Error('Supabase client not initialized')),\n    signInWithPassword: () => Promise.reject(new Error('Supabase client not initialized')),\n    signOut: () => Promise.reject(new Error('Supabase client not initialized')),\n    getSession: () => Promise.reject(new Error('Supabase client not initialized')),\n    getUser: () => Promise.reject(new Error('Supabase client not initialized')),\n  }\n} as unknown as SupabaseClient;\n\n// Initialize with mock client\nlet supabaseClient: SupabaseClient = mockClient;\nlet isInitialized = false;\nlet initializationPromise: Promise<SupabaseClient> | null = null;\nlet initializationAttempts = 0;\nconst MAX_INITIALIZATION_ATTEMPTS = 3;\n\nconst initializeSupabase = async (): Promise<SupabaseClient> => {\n  if (isInitialized) return supabaseClient;\n  if (initializationPromise) return initializationPromise;\n\n  initializationPromise = (async (): Promise<SupabaseClient> => {\n    try {\n      if (!supabaseUrl || !supabaseAnonKey) {\n        throw new Error('Missing Supabase credentials');\n      }\n\n      const client = createClient(supabaseUrl, supabaseAnonKey, {\n        auth: {\n          persistSession: true,\n          autoRefreshToken: true,\n          detectSessionInUrl: true\n        },\n        global: {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        },\n      });\n\n      // Test the connection with retry logic\n      while (initializationAttempts < MAX_INITIALIZATION_ATTEMPTS) {\n        try {\n          await client.from('news').select('id').limit(1);\n          console.log('Supabase connection successful');\n          supabaseClient = client;\n          isInitialized = true;\n          return client;\n        } catch (error) {\n          initializationAttempts++;\n          if (initializationAttempts === MAX_INITIALIZATION_ATTEMPTS) {\n            throw error;\n          }\n          // Wait before retrying (exponential backoff)\n          await new Promise(resolve => setTimeout(resolve, Math.pow(2, initializationAttempts) * 1000));\n        }\n      }\n      throw new Error('Failed to initialize Supabase client after maximum attempts');\n    } catch (error) {\n      console.error('Error initializing Supabase client:', error);\n      // Reset initialization state on failure\n      isInitialized = false;\n      initializationPromise = null;\n      throw error;\n    }\n  })();\n\n  return initializationPromise;\n};\n\n// Create a wrapper that ensures initialization\nconst getSupabaseClient = async (): Promise<SupabaseClient> => {\n  try {\n    if (!isInitialized) {\n      await initializeSupabase();\n    }\n    return supabaseClient;\n  } catch (error) {\n    console.error('Failed to get Supabase client:', error);\n    throw error;\n  }\n};\n\nexport const supabase = {\n  rpc: async (...args: Parameters<SupabaseClient['rpc']>) => {\n    const client = await getSupabaseClient();\n    return client.rpc(...args);\n  },\n  from: async (...args: Parameters<SupabaseClient['from']>) => {\n    const client = await getSupabaseClient();\n    return client.from(...args);\n  },\n  auth: {\n    signUp: async (...args: Parameters<SupabaseClient['auth']['signUp']>) => {\n      const client = await getSupabaseClient();\n      return client.auth.signUp(...args);\n    },\n    signInWithPassword: async (...args: Parameters<SupabaseClient['auth']['signInWithPassword']>) => {\n      const client = await getSupabaseClient();\n      return client.auth.signInWithPassword(...args);\n    },\n    signOut: async () => {\n      const client = await getSupabaseClient();\n      return client.auth.signOut();\n    },\n    getSession: async () => {\n      const client = await getSupabaseClient();\n      return client.auth.getSession();\n    },\n    getUser: async () => {\n      const client = await getSupabaseClient();\n      return client.auth.getUser();\n    },\n  },\n};\n\n// Auth services\nexport const auth = {\n  signUp: async (email: string, password: string) => {\n    try {\n      return await supabase.auth.signUp({ email, password });\n    } catch (error) {\n      console.error('Auth signUp error:', error);\n      throw error;\n    }\n  },\n  signIn: async (email: string, password: string) => {\n    try {\n      return await supabase.auth.signInWithPassword({ email, password });\n    } catch (error) {\n      console.error('Auth signIn error:', error);\n      throw error;\n    }\n  },\n  signOut: async () => {\n    try {\n      return await supabase.auth.signOut();\n    } catch (error) {\n      console.error('Auth signOut error:', error);\n      throw error;\n    }\n  },\n  getSession: async () => {\n    try {\n      return await supabase.auth.getSession();\n    } catch (error) {\n      console.error('Auth getSession error:', error);\n      throw error;\n    }\n  },\n  getUser: async () => {\n    try {\n      return await supabase.auth.getUser();\n    } catch (error) {\n      console.error('Auth getUser error:', error);\n      throw error;\n    }\n  },\n};\n\n// Equipment services\nexport const equipmentService = {\n  getAll: async () => {\n    try {\n      const query = await supabase.from('equipment');\n      return query.select('*');\n    } catch (error) {\n      console.error('Equipment getAll error:', error);\n      throw error;\n    }\n  },\n  getById: async (id: string) => {\n    try {\n      const query = await supabase.from('equipment');\n      return query.select('*').eq('id', id).single();\n    } catch (error) {\n      console.error('Equipment getById error:', error);\n      throw error;\n    }\n  },\n};\n\n// Rental services\nexport const rentalService = {\n  getAll: async () => {\n    try {\n      const query = await supabase.from('rentals');\n      return query.select('*');\n    } catch (error) {\n      console.error('Rental getAll error:', error);\n      throw error;\n    }\n  },\n  getById: async (id: string) => {\n    try {\n      const query = await supabase.from('rentals');\n      return query.select('*').eq('id', id).single();\n    } catch (error) {\n      console.error('Rental getById error:', error);\n      throw error;\n    }\n  },\n  create: async (data: any) => {\n    try {\n      const query = await supabase.from('rentals');\n      return query.insert(data);\n    } catch (error) {\n      console.error('Rental create error:', error);\n      throw error;\n    }\n  },\n};\n\n// Dynamic Content Service Definition (should be before the final export default)\nexport interface DynamicContentRpcResponseItem {\n  id: string;\n  status: string;\n  content: any; \n  page_key: string;\n  created_at: string;\n  updated_at: string;\n  section_key: string;\n  content_type: string;\n  display_order: number;\n}\n\nexport interface DynamicContentRpcResponse {\n  success: boolean;\n  message: string;\n  data: {\n    items: DynamicContentRpcResponseItem[];\n  };\n}\n\nexport const dynamicContentService = {\n  getPageContent: async (pageKey: string): Promise<DynamicContentRpcResponse[]> => {\n    try {\n      const client = await getSupabaseClient();\n      const { data, error } = await client.rpc('rpc_dynamic_content_list', {\n        p_page_key: pageKey,\n      });\n\n      if (error) {\n        console.error(`Error fetching dynamic page content for page key \"${pageKey}\":`, error);\n        throw error;\n      }\n      \n      if (!Array.isArray(data)) {\n        console.error('Unexpected response format from rpc_dynamic_content_list. Expected an array.');\n        throw new Error('Unexpected response format from RPC.');\n      }\n      return data as DynamicContentRpcResponse[];\n    } catch (error) {\n      console.error(`Error in dynamicContentService.getPageContent for pageKey ${pageKey}:`, error);\n      throw error; \n    }\n  },\n};\n\n// Consolidated Export all services\nexport default {\n  auth,\n  equipmentService,\n  rentalService,\n  dynamicContentService, // Ensure this is the only default export and it's at the end\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 276, "column": 0}, "map": {"version":3,"sources":["file:///Users/luiscf1226/Documents/Easy%20Solutions/alquipos/repos/fe-client/Frontend-Client/alquipos-cliente/src/services/news.ts"],"sourcesContent":["import { supabase } from './supabase';\nimport { CSSProperties } from 'react';\n\nexport interface NewsItem {\n  id: string;\n  slug: string;\n  tags: string[];\n  title: string;\n  status: string;\n  summary: string;\n  created_at: string;\n  is_featured: boolean;\n  published_at: string | null;\n  url?: {\n    api: string;\n    web: string;\n  };\n}\n\nexport interface NewsDetail extends NewsItem {\n  content: string;\n  metadata: Record<string, any>;\n  author_id: string;\n  is_active: boolean;\n  updated_at: string;\n  content_type: string;\n  seo_metadata: {\n    title: string;\n    keywords: string;\n    description: string;\n  };\n  display_order: number;\n}\n\ninterface NewsResponse {\n  success: boolean;\n  message: string;\n  data: {\n    items: NewsItem[];\n  };\n}\n\ninterface NewsDetailResponse {\n  success: boolean;\n  message: string;\n  data: NewsDetail;\n}\n\nconst handleSupabaseError = (error: any) => {\n  console.error('Supabase error:', error);\n  throw new Error(error.message || 'Error al conectar con el servidor');\n};\n\nconst MAX_RETRIES = 3;\nconst RETRY_DELAY = 1000; // 1 second\n\nconst delay = (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\n\nconst retryOperation = async <T>(\n  operation: () => Promise<T>,\n  retries = MAX_RETRIES,\n  delayMs = RETRY_DELAY\n): Promise<T> => {\n  try {\n    return await operation();\n  } catch (error) {\n    if (retries === 0) throw error;\n    await delay(delayMs);\n    return retryOperation(operation, retries - 1, delayMs * 2);\n  }\n};\n\nexport const newsService = {\n  getNewsList: async (): Promise<NewsItem[]> => {\n    return retryOperation(async () => {\n      try {\n        const { data, error } = await supabase.rpc('rpc_news_list');\n\n        if (error) {\n          handleSupabaseError(error);\n        }\n\n        if (!data || !Array.isArray(data) || data.length === 0) {\n          return [];\n        }\n\n        const response = data[0] as NewsResponse;\n        \n        if (!response.success) {\n          throw new Error(response.message || 'Error al obtener las noticias');\n        }\n\n        const items = response.data.items || [];\n\n        // Fetch details in parallel with error handling\n        const detailedItems = await Promise.allSettled(\n          items.map(async (item) => {\n            try {\n              const detail = await newsService.getNewsDetail(item.id);\n              return {\n                ...item,\n                ...detail\n              };\n            } catch (error) {\n              console.error(`Error fetching detail for news ${item.id}:`, error);\n              return item; // Return the basic item if detail fetch fails\n            }\n          })\n        );\n\n        // Filter out failed promises and get successful results\n        return detailedItems\n          .filter((result): result is PromiseFulfilledResult<NewsItem> => result.status === 'fulfilled')\n          .map(result => result.value);\n      } catch (error) {\n        console.error('Error fetching news:', error);\n        throw error;\n      }\n    });\n  },\n\n  getNewsDetail: async (id: string): Promise<NewsDetail> => {\n    return retryOperation(async () => {\n      try {\n        const { data, error } = await supabase.rpc('rpc_news_get', {\n          p_id: id\n        });\n\n        if (error) {\n          handleSupabaseError(error);\n        }\n\n        if (!data || !Array.isArray(data) || data.length === 0) {\n          throw new Error('Noticia no encontrada');\n        }\n\n        const response = data[0] as NewsDetailResponse;\n        \n        if (!response.success) {\n          throw new Error(response.message || 'Error al obtener la noticia');\n        }\n\n        return response.data;\n      } catch (error) {\n        console.error('Error fetching news detail:', error);\n        throw error;\n      }\n    });\n  },\n\n  // Helper function to get image URL with fallback\n  getImageUrl: (item: NewsItem): string => {\n    const fallbackImage = '/assets/images/news/default-news.jpg';\n    \n    // First try to get the API URL\n    if (item.url?.api) {\n      return item.url.api;\n    }\n    // Then try the web URL\n    if (item.url?.web) {\n      return item.url.web;\n    }\n    // Fallback to default image\n    return fallbackImage;\n  },\n\n  // Helper function to get image dimensions\n  getImageDimensions: (item: NewsItem): { width: number; height: number; style: CSSProperties } => {\n    const baseStyle: CSSProperties = {\n      objectFit: 'cover' as const,\n      objectPosition: 'center',\n      width: '100%',\n      height: '100%',\n    };\n\n    return {\n      width: 400,\n      height: 250,\n      style: baseStyle,\n    };\n  },\n\n  // Helper function to check if image exists with timeout\n  checkImageExists: async (url: string): Promise<boolean> => {\n    return retryOperation(async () => {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), 5000); // 5 second timeout\n\n        const response = await fetch(url, { \n          method: 'HEAD',\n          signal: controller.signal\n        });\n        \n        clearTimeout(timeoutId);\n        return response.ok;\n      } catch (error) {\n        console.error('Error checking image:', error);\n        return false;\n      }\n    });\n  }\n}; "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 412, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/noticias/noticias.module.css [app-client] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"badge\": \"noticias-module__B4wYkW__badge\",\n  \"categoryBadge\": \"noticias-module__B4wYkW__categoryBadge\",\n  \"contactButton\": \"noticias-module__B4wYkW__contactButton\",\n  \"contactSection\": \"noticias-module__B4wYkW__contactSection\",\n  \"container\": \"noticias-module__B4wYkW__container\",\n  \"expanded\": \"noticias-module__B4wYkW__expanded\",\n  \"fadeIn\": \"noticias-module__B4wYkW__fadeIn\",\n  \"fallbackImage\": \"noticias-module__B4wYkW__fallbackImage\",\n  \"header\": \"noticias-module__B4wYkW__header\",\n  \"imageWrapper\": \"noticias-module__B4wYkW__imageWrapper\",\n  \"newsCard\": \"noticias-module__B4wYkW__newsCard\",\n  \"newsContent\": \"noticias-module__B4wYkW__newsContent\",\n  \"newsDate\": \"noticias-module__B4wYkW__newsDate\",\n  \"newsDescription\": \"noticias-module__B4wYkW__newsDescription\",\n  \"newsGrid\": \"noticias-module__B4wYkW__newsGrid\",\n  \"newsImage\": \"noticias-module__B4wYkW__newsImage\",\n  \"newsImageContainer\": \"noticias-module__B4wYkW__newsImageContainer\",\n  \"newsTitle\": \"noticias-module__B4wYkW__newsTitle\",\n  \"pageWrapper\": \"noticias-module__B4wYkW__pageWrapper\",\n  \"slideDown\": \"noticias-module__B4wYkW__slideDown\",\n  \"subtitle\": \"noticias-module__B4wYkW__subtitle\",\n  \"tempImage\": \"noticias-module__B4wYkW__tempImage\",\n  \"title\": \"noticias-module__B4wYkW__title\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 443, "column": 0}, "map": {"version":3,"sources":["file:///Users/luiscf1226/Documents/Easy%20Solutions/alquipos/repos/fe-client/Frontend-Client/alquipos-cliente/src/app/noticias/page.tsx"],"sourcesContent":["'use client';\n\nimport Image from 'next/image';\nimport { useState, useEffect } from 'react';\nimport { newsService, NewsItem, NewsDetail } from '@/services/news';\nimport styles from './noticias.module.css';\nimport { useRouter } from 'next/navigation';\n\nexport default function NoticiasPage() {\n  const router = useRouter();\n  const [newsItems, setNewsItems] = useState<NewsItem[]>([]);\n  const [expandedId, setExpandedId] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState<string | null>(null);\n  const [selectedNews, setSelectedNews] = useState<NewsDetail | null>(null);\n  const [isDetailLoading, setIsDetailLoading] = useState(false);\n  const [imageErrors, setImageErrors] = useState<Record<string, boolean>>({});\n  const [imageLoading, setImageLoading] = useState<Record<string, boolean>>({});\n\n  // Fetch news items on component mount\n  useEffect(() => {\n    const fetchNews = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const items = await newsService.getNewsList();\n        setNewsItems(items);\n      } catch (err) {\n        const errorMessage = err instanceof Error ? err.message : 'Error al cargar las noticias';\n        setError(errorMessage);\n        console.error('Error fetching news:', err);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchNews();\n  }, []);\n\n  const handleNewsClick = async (id: string) => {\n    if (expandedId === id) {\n      setExpandedId(null);\n      setSelectedNews(null);\n      return;\n    }\n\n    setIsDetailLoading(true);\n    try {\n      // Since we already have the details from the initial fetch,\n      // we can just find the item in our state\n      const newsDetail = newsItems.find(item => item.id === id);\n      if (newsDetail) {\n        setSelectedNews(newsDetail as NewsDetail);\n        setExpandedId(id);\n      } else {\n        // Fallback to fetching if not found in state\n        const detail = await newsService.getNewsDetail(id);\n        setSelectedNews(detail);\n        setExpandedId(id);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err.message : 'Error al cargar la noticia';\n      console.error('Error fetching news detail:', err);\n      // Fallback to just expanding the card with summary\n      setExpandedId(id);\n    } finally {\n      setIsDetailLoading(false);\n    }\n  };\n\n  const handleImageError = (id: string) => {\n    setImageErrors(prev => ({ ...prev, [id]: true }));\n  };\n\n  if (isLoading) {\n    return (\n      <div className={styles.pageWrapper}>\n        <div className={styles.container}>\n          <div className={styles.loading}>\n            <div className={styles.loadingSpinner}></div>\n            <p>Cargando noticias...</p>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (error) {\n    return (\n      <div className={styles.pageWrapper}>\n        <div className={styles.container}>\n          <div className={styles.error}>\n            <h2>Error al cargar las noticias</h2>\n            <p>{error}</p>\n            <button \n              onClick={() => window.location.reload()}\n              className={styles.retryButton}\n            >\n              Intentar nuevamente\n            </button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.pageWrapper}>\n      <div className={styles.container}>\n        <div className={styles.header}>\n          <h1 className={styles.title}>Noticias y <span>Novedades</span></h1>\n          <span className={styles.badge}>Últimas Actualizaciones</span>\n          <p className={styles.subtitle}>\n            Mantente informado sobre nuestros nuevos equipos, proyectos exitosos y logros más recientes\n          </p>\n        </div>\n        \n        <div className={styles.newsGrid}>\n          {newsItems.map((item) => {\n            const dimensions = newsService.getImageDimensions(item);\n            const hasImageError = imageErrors[item.id];\n            const isLoading = imageLoading[item.id];\n            \n            return (\n              <article \n                key={item.id} \n                className={`${styles.newsCard} ${expandedId === item.id ? styles.expanded : ''}`}\n                onClick={() => handleNewsClick(item.id)}\n              >\n                <div className={styles.newsImageContainer}>\n                  <div className={styles.categoryBadge}>\n                    {item.tags[0] || 'Noticia'}\n                  </div>\n                  <div className={styles.imageWrapper}>\n                    {!hasImageError && (\n                      <>\n                        {isLoading && (\n                          <div className={styles.imageLoading}>\n                            <div className={styles.loadingSpinner}></div>\n                          </div>\n                        )}\n                        <Image \n                          src={newsService.getImageUrl(item)}\n                          alt={item.title}\n                          width={dimensions.width}\n                          height={dimensions.height}\n                          className={styles.newsImage}\n                          priority={item.is_featured}\n                          onError={() => handleImageError(item.id)}\n                          onLoadingComplete={() => setImageLoading(prev => ({ ...prev, [item.id]: false }))}\n                          onLoadStart={() => setImageLoading(prev => ({ ...prev, [item.id]: true }))}\n                          style={dimensions.style}\n                        />\n                      </>\n                    )}\n                    {hasImageError && (\n                      <div className={styles.fallbackImage}>\n                        <Image \n                          src=\"/large-hydraulic-excavator-cat-6030-caterpillar.jpg\"\n                          alt=\"Imagen por defecto\"\n                          width={dimensions.width}\n                          height={dimensions.height}\n                          className={styles.newsImage}\n                          style={dimensions.style}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </div>\n                <div className={styles.newsContent}>\n                  <div className={styles.newsDate}>\n                    {new Date(item.created_at).toLocaleDateString('es-ES', {\n                      year: 'numeric',\n                      month: 'long',\n                      day: 'numeric'\n                    })}\n                  </div>\n                  <h2 className={styles.newsTitle}>{item.title}</h2>\n                  {isDetailLoading && expandedId === item.id ? (\n                    <div className={styles.loadingDetail}>\n                      <div className={styles.loadingSpinner}></div>\n                      <p>Cargando contenido...</p>\n                    </div>\n                  ) : (\n                    <p className={styles.newsDescription}>\n                      {expandedId === item.id && selectedNews \n                        ? selectedNews.content \n                        : `${item.summary.slice(0, 100)}...`}\n                    </p>\n                  )}\n                  {expandedId === item.id && (\n                    <div className={styles.contactSection}>\n                      <a href=\"/contact\" className={styles.contactButton}>\n                        Contáctenos\n                      </a>\n                    </div>\n                  )}\n                </div>\n              </article>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}